// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: wishlist/wishlist.proto

package wishlist

import (
	context "context"
	fmt "fmt"
	_ "github.com/gogo/googleapis/google/api"
	_ "github.com/gogo/protobuf/gogoproto"
	proto "github.com/gogo/protobuf/proto"
	types "github.com/gogo/protobuf/types"
	golang_proto "github.com/golang/protobuf/proto"
	hotel "github.com/nekizz/final-project/backend/go-pbtype/hotel"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	io "io"
	math "math"
	math_bits "math/bits"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = golang_proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

type Wishlist struct {
	Id                   int32    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	HotelId              int32    `protobuf:"varint,2,opt,name=hotel_id,json=hotelId,proto3" json:"hotel_id,omitempty"`
	CustomerId           int32    `protobuf:"varint,3,opt,name=customer_id,json=customerId,proto3" json:"customer_id,omitempty"`
	CreatedAt            string   `protobuf:"bytes,20,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt            string   `protobuf:"bytes,21,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Wishlist) Reset()         { *m = Wishlist{} }
func (m *Wishlist) String() string { return proto.CompactTextString(m) }
func (*Wishlist) ProtoMessage()    {}
func (*Wishlist) Descriptor() ([]byte, []int) {
	return fileDescriptor_01470ee8a10d21ef, []int{0}
}
func (m *Wishlist) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *Wishlist) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_Wishlist.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *Wishlist) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Wishlist.Merge(m, src)
}
func (m *Wishlist) XXX_Size() int {
	return m.Size()
}
func (m *Wishlist) XXX_DiscardUnknown() {
	xxx_messageInfo_Wishlist.DiscardUnknown(m)
}

var xxx_messageInfo_Wishlist proto.InternalMessageInfo

func (m *Wishlist) GetId() int32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *Wishlist) GetHotelId() int32 {
	if m != nil {
		return m.HotelId
	}
	return 0
}

func (m *Wishlist) GetCustomerId() int32 {
	if m != nil {
		return m.CustomerId
	}
	return 0
}

func (m *Wishlist) GetCreatedAt() string {
	if m != nil {
		return m.CreatedAt
	}
	return ""
}

func (m *Wishlist) GetUpdatedAt() string {
	if m != nil {
		return m.UpdatedAt
	}
	return ""
}

func (*Wishlist) XXX_MessageName() string {
	return "whislist.Wishlist"
}

type OneWishlistRequest struct {
	HotelId              int32    `protobuf:"varint,1,opt,name=hotel_id,json=hotelId,proto3" json:"hotel_id,omitempty"`
	CustomerId           int32    `protobuf:"varint,2,opt,name=customer_id,json=customerId,proto3" json:"customer_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *OneWishlistRequest) Reset()         { *m = OneWishlistRequest{} }
func (m *OneWishlistRequest) String() string { return proto.CompactTextString(m) }
func (*OneWishlistRequest) ProtoMessage()    {}
func (*OneWishlistRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_01470ee8a10d21ef, []int{1}
}
func (m *OneWishlistRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *OneWishlistRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_OneWishlistRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *OneWishlistRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OneWishlistRequest.Merge(m, src)
}
func (m *OneWishlistRequest) XXX_Size() int {
	return m.Size()
}
func (m *OneWishlistRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_OneWishlistRequest.DiscardUnknown(m)
}

var xxx_messageInfo_OneWishlistRequest proto.InternalMessageInfo

func (m *OneWishlistRequest) GetHotelId() int32 {
	if m != nil {
		return m.HotelId
	}
	return 0
}

func (m *OneWishlistRequest) GetCustomerId() int32 {
	if m != nil {
		return m.CustomerId
	}
	return 0
}

func (*OneWishlistRequest) XXX_MessageName() string {
	return "whislist.OneWishlistRequest"
}

type ListWishlistRequest struct {
	CustomerId           int32    `protobuf:"varint,2,opt,name=customer_id,json=customerId,proto3" json:"customer_id,omitempty"`
	Page                 uint32   `protobuf:"varint,3,opt,name=page,proto3" json:"page,omitempty"`
	Limit                uint32   `protobuf:"varint,4,opt,name=limit,proto3" json:"limit,omitempty"`
	CreatedAtMin         string   `protobuf:"bytes,5,opt,name=created_at_min,json=createdAtMin,proto3" json:"created_at_min,omitempty"`
	CreatedAtMax         string   `protobuf:"bytes,6,opt,name=created_at_max,json=createdAtMax,proto3" json:"created_at_max,omitempty"`
	SearchField          string   `protobuf:"bytes,7,opt,name=search_field,json=searchField,proto3" json:"search_field,omitempty"`
	SearchValue          string   `protobuf:"bytes,8,opt,name=search_value,json=searchValue,proto3" json:"search_value,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListWishlistRequest) Reset()         { *m = ListWishlistRequest{} }
func (m *ListWishlistRequest) String() string { return proto.CompactTextString(m) }
func (*ListWishlistRequest) ProtoMessage()    {}
func (*ListWishlistRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_01470ee8a10d21ef, []int{2}
}
func (m *ListWishlistRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ListWishlistRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_ListWishlistRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *ListWishlistRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListWishlistRequest.Merge(m, src)
}
func (m *ListWishlistRequest) XXX_Size() int {
	return m.Size()
}
func (m *ListWishlistRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ListWishlistRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ListWishlistRequest proto.InternalMessageInfo

func (m *ListWishlistRequest) GetCustomerId() int32 {
	if m != nil {
		return m.CustomerId
	}
	return 0
}

func (m *ListWishlistRequest) GetPage() uint32 {
	if m != nil {
		return m.Page
	}
	return 0
}

func (m *ListWishlistRequest) GetLimit() uint32 {
	if m != nil {
		return m.Limit
	}
	return 0
}

func (m *ListWishlistRequest) GetCreatedAtMin() string {
	if m != nil {
		return m.CreatedAtMin
	}
	return ""
}

func (m *ListWishlistRequest) GetCreatedAtMax() string {
	if m != nil {
		return m.CreatedAtMax
	}
	return ""
}

func (m *ListWishlistRequest) GetSearchField() string {
	if m != nil {
		return m.SearchField
	}
	return ""
}

func (m *ListWishlistRequest) GetSearchValue() string {
	if m != nil {
		return m.SearchValue
	}
	return ""
}

func (*ListWishlistRequest) XXX_MessageName() string {
	return "whislist.ListWishlistRequest"
}

type ListWishlistResponse struct {
	Items                []*hotel.Hotel `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
	MaxPage              uint32         `protobuf:"varint,2,opt,name=max_page,json=maxPage,proto3" json:"max_page,omitempty"`
	TotalCount           uint32         `protobuf:"varint,3,opt,name=total_count,json=totalCount,proto3" json:"total_count,omitempty"`
	Page                 uint32         `protobuf:"varint,4,opt,name=page,proto3" json:"page,omitempty"`
	Limit                uint32         `protobuf:"varint,5,opt,name=limit,proto3" json:"limit,omitempty"`
	SearchField          string         `protobuf:"bytes,6,opt,name=search_field,json=searchField,proto3" json:"search_field,omitempty"`
	SearchValue          string         `protobuf:"bytes,7,opt,name=search_value,json=searchValue,proto3" json:"search_value,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *ListWishlistResponse) Reset()         { *m = ListWishlistResponse{} }
func (m *ListWishlistResponse) String() string { return proto.CompactTextString(m) }
func (*ListWishlistResponse) ProtoMessage()    {}
func (*ListWishlistResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_01470ee8a10d21ef, []int{3}
}
func (m *ListWishlistResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ListWishlistResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_ListWishlistResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *ListWishlistResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListWishlistResponse.Merge(m, src)
}
func (m *ListWishlistResponse) XXX_Size() int {
	return m.Size()
}
func (m *ListWishlistResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ListWishlistResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ListWishlistResponse proto.InternalMessageInfo

func (m *ListWishlistResponse) GetItems() []*hotel.Hotel {
	if m != nil {
		return m.Items
	}
	return nil
}

func (m *ListWishlistResponse) GetMaxPage() uint32 {
	if m != nil {
		return m.MaxPage
	}
	return 0
}

func (m *ListWishlistResponse) GetTotalCount() uint32 {
	if m != nil {
		return m.TotalCount
	}
	return 0
}

func (m *ListWishlistResponse) GetPage() uint32 {
	if m != nil {
		return m.Page
	}
	return 0
}

func (m *ListWishlistResponse) GetLimit() uint32 {
	if m != nil {
		return m.Limit
	}
	return 0
}

func (m *ListWishlistResponse) GetSearchField() string {
	if m != nil {
		return m.SearchField
	}
	return ""
}

func (m *ListWishlistResponse) GetSearchValue() string {
	if m != nil {
		return m.SearchValue
	}
	return ""
}

func (*ListWishlistResponse) XXX_MessageName() string {
	return "whislist.ListWishlistResponse"
}
func init() {
	proto.RegisterType((*Wishlist)(nil), "whislist.Wishlist")
	golang_proto.RegisterType((*Wishlist)(nil), "whislist.Wishlist")
	proto.RegisterType((*OneWishlistRequest)(nil), "whislist.OneWishlistRequest")
	golang_proto.RegisterType((*OneWishlistRequest)(nil), "whislist.OneWishlistRequest")
	proto.RegisterType((*ListWishlistRequest)(nil), "whislist.ListWishlistRequest")
	golang_proto.RegisterType((*ListWishlistRequest)(nil), "whislist.ListWishlistRequest")
	proto.RegisterType((*ListWishlistResponse)(nil), "whislist.ListWishlistResponse")
	golang_proto.RegisterType((*ListWishlistResponse)(nil), "whislist.ListWishlistResponse")
}

func init() { proto.RegisterFile("wishlist/wishlist.proto", fileDescriptor_01470ee8a10d21ef) }
func init() { golang_proto.RegisterFile("wishlist/wishlist.proto", fileDescriptor_01470ee8a10d21ef) }

var fileDescriptor_01470ee8a10d21ef = []byte{
	// 631 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x94, 0x54, 0xdf, 0x6e, 0xd3, 0x3e,
	0x18, 0x95, 0xb3, 0xfe, 0x9b, 0xbb, 0x5f, 0x7f, 0xc8, 0x74, 0x10, 0x3a, 0x96, 0x75, 0x81, 0x8b,
	0x32, 0xa9, 0x89, 0x34, 0xee, 0x7a, 0x37, 0x0a, 0x13, 0x93, 0x40, 0x94, 0x22, 0x81, 0xc4, 0x4d,
	0xe4, 0x26, 0x6e, 0x6a, 0x96, 0xc4, 0x21, 0x76, 0xb6, 0x6e, 0x88, 0x1b, 0x5e, 0x01, 0xae, 0x79,
	0x16, 0x2e, 0x77, 0x89, 0xc4, 0x0b, 0xa0, 0x0e, 0xf1, 0x00, 0x3c, 0x01, 0x8a, 0x93, 0xb4, 0x5d,
	0xe9, 0x98, 0xb8, 0x89, 0xfc, 0x9d, 0x73, 0xfc, 0xf9, 0x3b, 0x47, 0x8e, 0xe1, 0xcd, 0x63, 0xca,
	0x47, 0x1e, 0xe5, 0xc2, 0xcc, 0x17, 0x46, 0x18, 0x31, 0xc1, 0x50, 0xe5, 0x78, 0x44, 0x79, 0x52,
	0x37, 0xda, 0x2e, 0x15, 0xa3, 0x78, 0x60, 0xd8, 0xcc, 0x37, 0x5d, 0xe6, 0x32, 0x53, 0x0a, 0x06,
	0xf1, 0x50, 0x56, 0xb2, 0x90, 0xab, 0x74, 0x63, 0x63, 0xc3, 0x65, 0xcc, 0xf5, 0xc8, 0x4c, 0x45,
	0xfc, 0x50, 0x9c, 0x64, 0xe4, 0xed, 0x8c, 0xc4, 0x21, 0x35, 0x71, 0x10, 0x30, 0x81, 0x05, 0x65,
	0x01, 0xcf, 0xd8, 0xee, 0xdc, 0x49, 0x01, 0x39, 0xa4, 0xa7, 0xa7, 0xe6, 0x90, 0x06, 0xd8, 0x6b,
	0x87, 0x11, 0x7b, 0x43, 0x6c, 0x61, 0x0e, 0xb0, 0x7d, 0x48, 0x02, 0xc7, 0x74, 0x59, 0x3b, 0x1c,
	0x88, 0x93, 0x90, 0x98, 0x23, 0x26, 0x88, 0x97, 0x7e, 0xd3, 0x26, 0xfa, 0x27, 0x00, 0x2b, 0xaf,
	0x32, 0x2f, 0xa8, 0x06, 0x15, 0xea, 0xa8, 0xa0, 0x09, 0x5a, 0xc5, 0xbe, 0x42, 0x1d, 0x74, 0x0b,
	0x56, 0xa4, 0xd6, 0xa2, 0x8e, 0xaa, 0x48, 0xb4, 0x2c, 0xeb, 0x03, 0x07, 0x6d, 0xc1, 0xaa, 0x1d,
	0x73, 0xc1, 0x7c, 0x12, 0x25, 0xec, 0x8a, 0x64, 0x61, 0x0e, 0x1d, 0x38, 0x68, 0x13, 0x42, 0x3b,
	0x22, 0x58, 0x10, 0xc7, 0xc2, 0x42, 0xad, 0x37, 0x41, 0x6b, 0xb5, 0xbf, 0x9a, 0x21, 0x7b, 0x22,
	0xa1, 0xe3, 0xd0, 0xc9, 0xe9, 0xf5, 0x94, 0xce, 0x90, 0x3d, 0xa1, 0xf7, 0x20, 0x7a, 0x16, 0x90,
	0x7c, 0xb0, 0x3e, 0x79, 0x1b, 0x13, 0x2e, 0x2e, 0xcc, 0x03, 0xfe, 0x3a, 0x8f, 0xb2, 0x38, 0x8f,
	0xfe, 0x0b, 0xc0, 0xeb, 0x4f, 0x28, 0x17, 0x8b, 0x3d, 0xaf, 0xda, 0x88, 0x10, 0x2c, 0x84, 0xd8,
	0x25, 0xd2, 0xe2, 0x7f, 0x7d, 0xb9, 0x46, 0x75, 0x58, 0xf4, 0xa8, 0x4f, 0x85, 0x5a, 0x90, 0x60,
	0x5a, 0xa0, 0xbb, 0xb0, 0x36, 0xb3, 0x6c, 0xf9, 0x34, 0x50, 0x8b, 0xd2, 0xd7, 0xda, 0xd4, 0xf6,
	0x53, 0x1a, 0x2c, 0xaa, 0xf0, 0x58, 0x2d, 0x2d, 0xaa, 0xf0, 0x18, 0x6d, 0xc3, 0x35, 0x4e, 0x70,
	0x64, 0x8f, 0xac, 0x21, 0x25, 0x9e, 0xa3, 0x96, 0xa5, 0xa6, 0x9a, 0x62, 0xfb, 0x09, 0x34, 0x27,
	0x39, 0xc2, 0x5e, 0x4c, 0xd4, 0xca, 0xbc, 0xe4, 0x65, 0x02, 0xe9, 0x3f, 0x01, 0xac, 0x5f, 0x34,
	0xcd, 0x43, 0x16, 0x70, 0x82, 0x74, 0x58, 0xa4, 0x82, 0xf8, 0x5c, 0x05, 0xcd, 0x95, 0x56, 0x75,
	0x77, 0xcd, 0x48, 0xef, 0xc4, 0xe3, 0xe4, 0xdb, 0x4f, 0xa9, 0x24, 0x6d, 0x1f, 0x8f, 0x2d, 0x69,
	0x5e, 0x91, 0x3e, 0xcb, 0x3e, 0x1e, 0xf7, 0x12, 0xff, 0x5b, 0xb0, 0x2a, 0x98, 0xc0, 0x9e, 0x65,
	0xb3, 0x38, 0x10, 0x59, 0x34, 0x50, 0x42, 0xdd, 0x04, 0x99, 0x86, 0x56, 0x58, 0x16, 0x5a, 0x71,
	0x3e, 0xb4, 0x45, 0xa3, 0xa5, 0xab, 0x8d, 0x96, 0xff, 0x30, 0xba, 0xfb, 0x59, 0x81, 0xff, 0xe7,
	0x26, 0x5f, 0x90, 0xe8, 0x88, 0xda, 0x04, 0xed, 0xc3, 0x52, 0x57, 0x46, 0x8a, 0x90, 0x91, 0xff,
	0x9e, 0x46, 0x2e, 0x6a, 0x2c, 0xc1, 0xf4, 0xfa, 0x87, 0x6f, 0x3f, 0x3e, 0x2a, 0x35, 0x7d, 0x75,
	0xfa, 0x7b, 0x77, 0xc0, 0x0e, 0x0a, 0x61, 0x21, 0xc9, 0x10, 0x6d, 0xce, 0x76, 0x2c, 0xb9, 0x48,
	0x0d, 0xed, 0x32, 0x3a, 0x8d, 0x5c, 0xbf, 0x27, 0x9b, 0xdf, 0x41, 0xdb, 0x66, 0x7e, 0xb9, 0xcc,
	0x77, 0x73, 0x37, 0xef, 0xfd, 0xf4, 0x4c, 0x8e, 0x9e, 0xc3, 0xd2, 0x43, 0xe2, 0x91, 0x4b, 0x26,
	0xbf, 0x61, 0xa4, 0xcf, 0x82, 0x91, 0xbf, 0x19, 0xc6, 0xa3, 0xe4, 0xcd, 0xd0, 0x37, 0xe4, 0x01,
	0xeb, 0xfa, 0xb5, 0x69, 0x27, 0xd3, 0x91, 0x5d, 0x3a, 0x60, 0xe7, 0x41, 0xef, 0x6c, 0xa2, 0x81,
	0xaf, 0x13, 0x0d, 0x7c, 0x9f, 0x68, 0xe0, 0xcb, 0xb9, 0x06, 0xce, 0xce, 0x35, 0xf0, 0xba, 0xf3,
	0xef, 0x4f, 0x48, 0xde, 0x7b, 0x50, 0x92, 0xc7, 0xdf, 0xff, 0x1d, 0x00, 0x00, 0xff, 0xff, 0x29,
	0xbe, 0x56, 0x41, 0x14, 0x05, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// WishlistServiceClient is the client API for WishlistService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type WishlistServiceClient interface {
	Create(ctx context.Context, in *Wishlist, opts ...grpc.CallOption) (*Wishlist, error)
	List(ctx context.Context, in *ListWishlistRequest, opts ...grpc.CallOption) (*ListWishlistResponse, error)
	Delete(ctx context.Context, in *Wishlist, opts ...grpc.CallOption) (*types.Empty, error)
}

type wishlistServiceClient struct {
	cc *grpc.ClientConn
}

func NewWishlistServiceClient(cc *grpc.ClientConn) WishlistServiceClient {
	return &wishlistServiceClient{cc}
}

func (c *wishlistServiceClient) Create(ctx context.Context, in *Wishlist, opts ...grpc.CallOption) (*Wishlist, error) {
	out := new(Wishlist)
	err := c.cc.Invoke(ctx, "/whislist.WishlistService/Create", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *wishlistServiceClient) List(ctx context.Context, in *ListWishlistRequest, opts ...grpc.CallOption) (*ListWishlistResponse, error) {
	out := new(ListWishlistResponse)
	err := c.cc.Invoke(ctx, "/whislist.WishlistService/List", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *wishlistServiceClient) Delete(ctx context.Context, in *Wishlist, opts ...grpc.CallOption) (*types.Empty, error) {
	out := new(types.Empty)
	err := c.cc.Invoke(ctx, "/whislist.WishlistService/Delete", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// WishlistServiceServer is the server API for WishlistService service.
type WishlistServiceServer interface {
	Create(context.Context, *Wishlist) (*Wishlist, error)
	List(context.Context, *ListWishlistRequest) (*ListWishlistResponse, error)
	Delete(context.Context, *Wishlist) (*types.Empty, error)
}

// UnimplementedWishlistServiceServer can be embedded to have forward compatible implementations.
type UnimplementedWishlistServiceServer struct {
}

func (*UnimplementedWishlistServiceServer) Create(ctx context.Context, req *Wishlist) (*Wishlist, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Create not implemented")
}
func (*UnimplementedWishlistServiceServer) List(ctx context.Context, req *ListWishlistRequest) (*ListWishlistResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method List not implemented")
}
func (*UnimplementedWishlistServiceServer) Delete(ctx context.Context, req *Wishlist) (*types.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Delete not implemented")
}

func RegisterWishlistServiceServer(s *grpc.Server, srv WishlistServiceServer) {
	s.RegisterService(&_WishlistService_serviceDesc, srv)
}

func _WishlistService_Create_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Wishlist)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(WishlistServiceServer).Create(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/whislist.WishlistService/Create",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(WishlistServiceServer).Create(ctx, req.(*Wishlist))
	}
	return interceptor(ctx, in, info, handler)
}

func _WishlistService_List_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListWishlistRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(WishlistServiceServer).List(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/whislist.WishlistService/List",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(WishlistServiceServer).List(ctx, req.(*ListWishlistRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _WishlistService_Delete_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Wishlist)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(WishlistServiceServer).Delete(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/whislist.WishlistService/Delete",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(WishlistServiceServer).Delete(ctx, req.(*Wishlist))
	}
	return interceptor(ctx, in, info, handler)
}

var _WishlistService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "whislist.WishlistService",
	HandlerType: (*WishlistServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Create",
			Handler:    _WishlistService_Create_Handler,
		},
		{
			MethodName: "List",
			Handler:    _WishlistService_List_Handler,
		},
		{
			MethodName: "Delete",
			Handler:    _WishlistService_Delete_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "wishlist/wishlist.proto",
}

func (m *Wishlist) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *Wishlist) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *Wishlist) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.UpdatedAt) > 0 {
		i -= len(m.UpdatedAt)
		copy(dAtA[i:], m.UpdatedAt)
		i = encodeVarintWishlist(dAtA, i, uint64(len(m.UpdatedAt)))
		i--
		dAtA[i] = 0x1
		i--
		dAtA[i] = 0xaa
	}
	if len(m.CreatedAt) > 0 {
		i -= len(m.CreatedAt)
		copy(dAtA[i:], m.CreatedAt)
		i = encodeVarintWishlist(dAtA, i, uint64(len(m.CreatedAt)))
		i--
		dAtA[i] = 0x1
		i--
		dAtA[i] = 0xa2
	}
	if m.CustomerId != 0 {
		i = encodeVarintWishlist(dAtA, i, uint64(m.CustomerId))
		i--
		dAtA[i] = 0x18
	}
	if m.HotelId != 0 {
		i = encodeVarintWishlist(dAtA, i, uint64(m.HotelId))
		i--
		dAtA[i] = 0x10
	}
	if m.Id != 0 {
		i = encodeVarintWishlist(dAtA, i, uint64(m.Id))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *OneWishlistRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *OneWishlistRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *OneWishlistRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.CustomerId != 0 {
		i = encodeVarintWishlist(dAtA, i, uint64(m.CustomerId))
		i--
		dAtA[i] = 0x10
	}
	if m.HotelId != 0 {
		i = encodeVarintWishlist(dAtA, i, uint64(m.HotelId))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *ListWishlistRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ListWishlistRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ListWishlistRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.SearchValue) > 0 {
		i -= len(m.SearchValue)
		copy(dAtA[i:], m.SearchValue)
		i = encodeVarintWishlist(dAtA, i, uint64(len(m.SearchValue)))
		i--
		dAtA[i] = 0x42
	}
	if len(m.SearchField) > 0 {
		i -= len(m.SearchField)
		copy(dAtA[i:], m.SearchField)
		i = encodeVarintWishlist(dAtA, i, uint64(len(m.SearchField)))
		i--
		dAtA[i] = 0x3a
	}
	if len(m.CreatedAtMax) > 0 {
		i -= len(m.CreatedAtMax)
		copy(dAtA[i:], m.CreatedAtMax)
		i = encodeVarintWishlist(dAtA, i, uint64(len(m.CreatedAtMax)))
		i--
		dAtA[i] = 0x32
	}
	if len(m.CreatedAtMin) > 0 {
		i -= len(m.CreatedAtMin)
		copy(dAtA[i:], m.CreatedAtMin)
		i = encodeVarintWishlist(dAtA, i, uint64(len(m.CreatedAtMin)))
		i--
		dAtA[i] = 0x2a
	}
	if m.Limit != 0 {
		i = encodeVarintWishlist(dAtA, i, uint64(m.Limit))
		i--
		dAtA[i] = 0x20
	}
	if m.Page != 0 {
		i = encodeVarintWishlist(dAtA, i, uint64(m.Page))
		i--
		dAtA[i] = 0x18
	}
	if m.CustomerId != 0 {
		i = encodeVarintWishlist(dAtA, i, uint64(m.CustomerId))
		i--
		dAtA[i] = 0x10
	}
	return len(dAtA) - i, nil
}

func (m *ListWishlistResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ListWishlistResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ListWishlistResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.SearchValue) > 0 {
		i -= len(m.SearchValue)
		copy(dAtA[i:], m.SearchValue)
		i = encodeVarintWishlist(dAtA, i, uint64(len(m.SearchValue)))
		i--
		dAtA[i] = 0x3a
	}
	if len(m.SearchField) > 0 {
		i -= len(m.SearchField)
		copy(dAtA[i:], m.SearchField)
		i = encodeVarintWishlist(dAtA, i, uint64(len(m.SearchField)))
		i--
		dAtA[i] = 0x32
	}
	if m.Limit != 0 {
		i = encodeVarintWishlist(dAtA, i, uint64(m.Limit))
		i--
		dAtA[i] = 0x28
	}
	if m.Page != 0 {
		i = encodeVarintWishlist(dAtA, i, uint64(m.Page))
		i--
		dAtA[i] = 0x20
	}
	if m.TotalCount != 0 {
		i = encodeVarintWishlist(dAtA, i, uint64(m.TotalCount))
		i--
		dAtA[i] = 0x18
	}
	if m.MaxPage != 0 {
		i = encodeVarintWishlist(dAtA, i, uint64(m.MaxPage))
		i--
		dAtA[i] = 0x10
	}
	if len(m.Items) > 0 {
		for iNdEx := len(m.Items) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.Items[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintWishlist(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0xa
		}
	}
	return len(dAtA) - i, nil
}

func encodeVarintWishlist(dAtA []byte, offset int, v uint64) int {
	offset -= sovWishlist(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func (m *Wishlist) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Id != 0 {
		n += 1 + sovWishlist(uint64(m.Id))
	}
	if m.HotelId != 0 {
		n += 1 + sovWishlist(uint64(m.HotelId))
	}
	if m.CustomerId != 0 {
		n += 1 + sovWishlist(uint64(m.CustomerId))
	}
	l = len(m.CreatedAt)
	if l > 0 {
		n += 2 + l + sovWishlist(uint64(l))
	}
	l = len(m.UpdatedAt)
	if l > 0 {
		n += 2 + l + sovWishlist(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *OneWishlistRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.HotelId != 0 {
		n += 1 + sovWishlist(uint64(m.HotelId))
	}
	if m.CustomerId != 0 {
		n += 1 + sovWishlist(uint64(m.CustomerId))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *ListWishlistRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.CustomerId != 0 {
		n += 1 + sovWishlist(uint64(m.CustomerId))
	}
	if m.Page != 0 {
		n += 1 + sovWishlist(uint64(m.Page))
	}
	if m.Limit != 0 {
		n += 1 + sovWishlist(uint64(m.Limit))
	}
	l = len(m.CreatedAtMin)
	if l > 0 {
		n += 1 + l + sovWishlist(uint64(l))
	}
	l = len(m.CreatedAtMax)
	if l > 0 {
		n += 1 + l + sovWishlist(uint64(l))
	}
	l = len(m.SearchField)
	if l > 0 {
		n += 1 + l + sovWishlist(uint64(l))
	}
	l = len(m.SearchValue)
	if l > 0 {
		n += 1 + l + sovWishlist(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *ListWishlistResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if len(m.Items) > 0 {
		for _, e := range m.Items {
			l = e.Size()
			n += 1 + l + sovWishlist(uint64(l))
		}
	}
	if m.MaxPage != 0 {
		n += 1 + sovWishlist(uint64(m.MaxPage))
	}
	if m.TotalCount != 0 {
		n += 1 + sovWishlist(uint64(m.TotalCount))
	}
	if m.Page != 0 {
		n += 1 + sovWishlist(uint64(m.Page))
	}
	if m.Limit != 0 {
		n += 1 + sovWishlist(uint64(m.Limit))
	}
	l = len(m.SearchField)
	if l > 0 {
		n += 1 + l + sovWishlist(uint64(l))
	}
	l = len(m.SearchValue)
	if l > 0 {
		n += 1 + l + sovWishlist(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func sovWishlist(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozWishlist(x uint64) (n int) {
	return sovWishlist(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *Wishlist) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowWishlist
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: Wishlist: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: Wishlist: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			m.Id = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowWishlist
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Id |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field HotelId", wireType)
			}
			m.HotelId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowWishlist
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.HotelId |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field CustomerId", wireType)
			}
			m.CustomerId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowWishlist
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.CustomerId |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 20:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field CreatedAt", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowWishlist
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthWishlist
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthWishlist
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.CreatedAt = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 21:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field UpdatedAt", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowWishlist
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthWishlist
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthWishlist
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.UpdatedAt = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipWishlist(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthWishlist
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *OneWishlistRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowWishlist
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: OneWishlistRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: OneWishlistRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field HotelId", wireType)
			}
			m.HotelId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowWishlist
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.HotelId |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field CustomerId", wireType)
			}
			m.CustomerId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowWishlist
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.CustomerId |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipWishlist(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthWishlist
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *ListWishlistRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowWishlist
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ListWishlistRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ListWishlistRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field CustomerId", wireType)
			}
			m.CustomerId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowWishlist
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.CustomerId |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Page", wireType)
			}
			m.Page = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowWishlist
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Page |= uint32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Limit", wireType)
			}
			m.Limit = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowWishlist
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Limit |= uint32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field CreatedAtMin", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowWishlist
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthWishlist
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthWishlist
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.CreatedAtMin = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field CreatedAtMax", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowWishlist
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthWishlist
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthWishlist
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.CreatedAtMax = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 7:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field SearchField", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowWishlist
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthWishlist
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthWishlist
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.SearchField = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 8:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field SearchValue", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowWishlist
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthWishlist
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthWishlist
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.SearchValue = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipWishlist(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthWishlist
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *ListWishlistResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowWishlist
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ListWishlistResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ListWishlistResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Items", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowWishlist
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthWishlist
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthWishlist
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Items = append(m.Items, &hotel.Hotel{})
			if err := m.Items[len(m.Items)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field MaxPage", wireType)
			}
			m.MaxPage = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowWishlist
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.MaxPage |= uint32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field TotalCount", wireType)
			}
			m.TotalCount = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowWishlist
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.TotalCount |= uint32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Page", wireType)
			}
			m.Page = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowWishlist
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Page |= uint32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 5:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Limit", wireType)
			}
			m.Limit = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowWishlist
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Limit |= uint32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field SearchField", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowWishlist
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthWishlist
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthWishlist
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.SearchField = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 7:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field SearchValue", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowWishlist
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthWishlist
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthWishlist
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.SearchValue = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipWishlist(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthWishlist
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipWishlist(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowWishlist
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowWishlist
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowWishlist
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthWishlist
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupWishlist
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthWishlist
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthWishlist        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowWishlist          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupWishlist = fmt.Errorf("proto: unexpected end of group")
)
