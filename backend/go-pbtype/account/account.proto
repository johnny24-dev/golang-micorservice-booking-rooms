syntax = "proto3";

package account;

option go_package = "github.com/nekizz/final-project/backend/go-pbtype/account";

import "github.com/gogo/protobuf/gogoproto/gogo.proto";
import "google/api/annotations.proto";


// Enable custom Marshal method.
option (gogoproto.marshaler_all) = true;
// Enable custom Unmarshal method.
option (gogoproto.unmarshaler_all) = true;
// Enable custom Size method (Required by Marshal and Unmarshal).
option (gogoproto.sizer_all) = true;
// Enable registration with golang/protobuf for the grpc-gateway.
option (gogoproto.goproto_registration) = true;
// Enable generation of XXX_MessageName methods for grpc-go/status.
option (gogoproto.messagename_all) = true;

message Account {
  int32 id = 1;
  string username = 2;
  string password = 3;

  string created_at = 20;
  string updated_at = 21;
}

message OneAccountRequest {
  string id = 1;
  string username = 2;
}

message OneAccountUpdate{
  string id = 1;
  string password = 2;
}

message ListAccountRequest {
  uint32 page = 3;
  uint32 limit = 4;
  string created_at_min = 5;
  string created_at_max = 6;
  string search_field = 7;
  string search_value = 8;
}

message ListAccountResponse {
  repeated Account items = 1;
  uint32 max_page = 2;
  uint32 total_count = 3;
  uint32 page = 4;
  uint32 limit = 5;
  string search_field = 6;
  string search_value = 7;
}

message CheckingOtpExpirationRequest{
  string username = 1;
  string otp = 2;
}

message Notification {
  string status = 1;
  string message = 2;
  int32 code = 3;
}

service AccountService {
  rpc Login(Account) returns (Account) {
    option (google.api.http) = {
      post: "/account/login"
      body: "*"
    };
  };

  rpc FacebookLogin(Account) returns (Notification) {
    option (google.api.http) = {
      post: "/facebook/login"
    };
  };
}