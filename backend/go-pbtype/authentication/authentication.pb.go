// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: authentication/authentication.proto

package authentication

import (
	context "context"
	fmt "fmt"
	_ "github.com/gogo/googleapis/google/api"
	_ "github.com/gogo/protobuf/gogoproto"
	proto "github.com/gogo/protobuf/proto"
	types "github.com/gogo/protobuf/types"
	golang_proto "github.com/golang/protobuf/proto"
	notification "github.com/nekizz/final-project/backend/go-pbtype/notification"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	io "io"
	math "math"
	math_bits "math/bits"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = golang_proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

type Authentication struct {
	Id                   int32    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Username             string   `protobuf:"bytes,2,opt,name=username,proto3" json:"username,omitempty"`
	Password             string   `protobuf:"bytes,3,opt,name=password,proto3" json:"password,omitempty"`
	CreatedAt            string   `protobuf:"bytes,20,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt            string   `protobuf:"bytes,21,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Authentication) Reset()         { *m = Authentication{} }
func (m *Authentication) String() string { return proto.CompactTextString(m) }
func (*Authentication) ProtoMessage()    {}
func (*Authentication) Descriptor() ([]byte, []int) {
	return fileDescriptor_067dc6fa29e56c89, []int{0}
}
func (m *Authentication) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *Authentication) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_Authentication.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *Authentication) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Authentication.Merge(m, src)
}
func (m *Authentication) XXX_Size() int {
	return m.Size()
}
func (m *Authentication) XXX_DiscardUnknown() {
	xxx_messageInfo_Authentication.DiscardUnknown(m)
}

var xxx_messageInfo_Authentication proto.InternalMessageInfo

func (m *Authentication) GetId() int32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *Authentication) GetUsername() string {
	if m != nil {
		return m.Username
	}
	return ""
}

func (m *Authentication) GetPassword() string {
	if m != nil {
		return m.Password
	}
	return ""
}

func (m *Authentication) GetCreatedAt() string {
	if m != nil {
		return m.CreatedAt
	}
	return ""
}

func (m *Authentication) GetUpdatedAt() string {
	if m != nil {
		return m.UpdatedAt
	}
	return ""
}

func (*Authentication) XXX_MessageName() string {
	return "authentication.Authentication"
}

type AuthenticationResponse struct {
	JwtToken             string   `protobuf:"bytes,1,opt,name=jwt_token,json=jwtToken,proto3" json:"jwt_token,omitempty"`
	CreatedAt            string   `protobuf:"bytes,20,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt            string   `protobuf:"bytes,21,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AuthenticationResponse) Reset()         { *m = AuthenticationResponse{} }
func (m *AuthenticationResponse) String() string { return proto.CompactTextString(m) }
func (*AuthenticationResponse) ProtoMessage()    {}
func (*AuthenticationResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_067dc6fa29e56c89, []int{1}
}
func (m *AuthenticationResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *AuthenticationResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_AuthenticationResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *AuthenticationResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AuthenticationResponse.Merge(m, src)
}
func (m *AuthenticationResponse) XXX_Size() int {
	return m.Size()
}
func (m *AuthenticationResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_AuthenticationResponse.DiscardUnknown(m)
}

var xxx_messageInfo_AuthenticationResponse proto.InternalMessageInfo

func (m *AuthenticationResponse) GetJwtToken() string {
	if m != nil {
		return m.JwtToken
	}
	return ""
}

func (m *AuthenticationResponse) GetCreatedAt() string {
	if m != nil {
		return m.CreatedAt
	}
	return ""
}

func (m *AuthenticationResponse) GetUpdatedAt() string {
	if m != nil {
		return m.UpdatedAt
	}
	return ""
}

func (*AuthenticationResponse) XXX_MessageName() string {
	return "authentication.AuthenticationResponse"
}

type CheckingOtpExpirationRequest struct {
	Username             string   `protobuf:"bytes,1,opt,name=username,proto3" json:"username,omitempty"`
	Otp                  string   `protobuf:"bytes,2,opt,name=otp,proto3" json:"otp,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CheckingOtpExpirationRequest) Reset()         { *m = CheckingOtpExpirationRequest{} }
func (m *CheckingOtpExpirationRequest) String() string { return proto.CompactTextString(m) }
func (*CheckingOtpExpirationRequest) ProtoMessage()    {}
func (*CheckingOtpExpirationRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_067dc6fa29e56c89, []int{2}
}
func (m *CheckingOtpExpirationRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *CheckingOtpExpirationRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_CheckingOtpExpirationRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *CheckingOtpExpirationRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CheckingOtpExpirationRequest.Merge(m, src)
}
func (m *CheckingOtpExpirationRequest) XXX_Size() int {
	return m.Size()
}
func (m *CheckingOtpExpirationRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CheckingOtpExpirationRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CheckingOtpExpirationRequest proto.InternalMessageInfo

func (m *CheckingOtpExpirationRequest) GetUsername() string {
	if m != nil {
		return m.Username
	}
	return ""
}

func (m *CheckingOtpExpirationRequest) GetOtp() string {
	if m != nil {
		return m.Otp
	}
	return ""
}

func (*CheckingOtpExpirationRequest) XXX_MessageName() string {
	return "authentication.CheckingOtpExpirationRequest"
}
func init() {
	proto.RegisterType((*Authentication)(nil), "authentication.Authentication")
	golang_proto.RegisterType((*Authentication)(nil), "authentication.Authentication")
	proto.RegisterType((*AuthenticationResponse)(nil), "authentication.AuthenticationResponse")
	golang_proto.RegisterType((*AuthenticationResponse)(nil), "authentication.AuthenticationResponse")
	proto.RegisterType((*CheckingOtpExpirationRequest)(nil), "authentication.CheckingOtpExpirationRequest")
	golang_proto.RegisterType((*CheckingOtpExpirationRequest)(nil), "authentication.CheckingOtpExpirationRequest")
}

func init() {
	proto.RegisterFile("authentication/authentication.proto", fileDescriptor_067dc6fa29e56c89)
}
func init() {
	golang_proto.RegisterFile("authentication/authentication.proto", fileDescriptor_067dc6fa29e56c89)
}

var fileDescriptor_067dc6fa29e56c89 = []byte{
	// 616 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xac, 0x94, 0x4f, 0x6f, 0xd3, 0x3e,
	0x18, 0xc7, 0xe5, 0x4e, 0x9b, 0x56, 0x1f, 0xaa, 0xdf, 0x2f, 0xb0, 0x51, 0x65, 0xa3, 0x4c, 0x66,
	0x8c, 0x69, 0x5a, 0x13, 0x09, 0x6e, 0x9c, 0x18, 0x53, 0x6f, 0x13, 0x7f, 0xba, 0x3f, 0x07, 0x2e,
	0x91, 0x9b, 0x3c, 0x4b, 0xbd, 0x36, 0xb6, 0x17, 0x3b, 0x5b, 0x37, 0x24, 0x0e, 0xbc, 0x03, 0x84,
	0xc4, 0xeb, 0xe1, 0xb8, 0x23, 0x12, 0x6f, 0x00, 0x6d, 0xbc, 0x0d, 0x24, 0x14, 0x27, 0xe9, 0x9a,
	0x80, 0x36, 0xa1, 0x72, 0xcb, 0xf7, 0xf9, 0xba, 0xfe, 0xd8, 0x8f, 0x9f, 0x6f, 0xf1, 0x43, 0x9a,
	0xe8, 0x3e, 0x70, 0xcd, 0x7c, 0xaa, 0x99, 0xe0, 0x6e, 0x59, 0x3a, 0x32, 0x16, 0x5a, 0x58, 0x8d,
	0x72, 0xd5, 0x7e, 0x13, 0x32, 0xdd, 0x4f, 0x7a, 0x8e, 0x2f, 0x22, 0x97, 0xc3, 0x80, 0x9d, 0x9f,
	0xbb, 0x87, 0x8c, 0xd3, 0x61, 0x5b, 0xc6, 0xe2, 0x08, 0x7c, 0xed, 0xf6, 0xa8, 0x3f, 0x00, 0x1e,
	0xb8, 0xa1, 0x68, 0xcb, 0x9e, 0x3e, 0x93, 0xe0, 0x72, 0xa1, 0xd9, 0x61, 0x01, 0x99, 0x14, 0x19,
	0xc2, 0x6e, 0x4f, 0x6c, 0x19, 0x8a, 0x50, 0xb8, 0xa6, 0xdc, 0x4b, 0x0e, 0x8d, 0x32, 0xc2, 0x7c,
	0xe5, 0xcb, 0x97, 0x42, 0x21, 0xc2, 0x21, 0x5c, 0xaf, 0x82, 0x48, 0xea, 0xb3, 0xdc, 0x5c, 0xce,
	0x4d, 0x2a, 0x99, 0x4b, 0x39, 0x17, 0xda, 0x80, 0x54, 0xe6, 0x92, 0xcf, 0x08, 0x37, 0xb6, 0x4a,
	0xf7, 0xb1, 0x1a, 0xb8, 0xc6, 0x82, 0x26, 0x5a, 0x41, 0xeb, 0xb3, 0xdd, 0x1a, 0x0b, 0x2c, 0x1b,
	0xcf, 0x27, 0x0a, 0x62, 0x4e, 0x23, 0x68, 0xd6, 0x56, 0xd0, 0x7a, 0xbd, 0x3b, 0xd6, 0xa9, 0x27,
	0xa9, 0x52, 0xa7, 0x22, 0x0e, 0x9a, 0x33, 0x99, 0x57, 0x68, 0xeb, 0x3e, 0xc6, 0x7e, 0x0c, 0x54,
	0x43, 0xe0, 0x51, 0xdd, 0xbc, 0x6b, 0xdc, 0x7a, 0x5e, 0xd9, 0xd2, 0xa9, 0x9d, 0xc8, 0xa0, 0xb0,
	0x17, 0x32, 0x3b, 0xaf, 0x6c, 0x69, 0xa2, 0xf0, 0x62, 0xf9, 0x5c, 0x5d, 0x50, 0x52, 0x70, 0x05,
	0xd6, 0x12, 0xae, 0x1f, 0x9d, 0x6a, 0x4f, 0x8b, 0x01, 0x70, 0x73, 0xcc, 0x7a, 0x77, 0xfe, 0xe8,
	0x54, 0xef, 0xa5, 0x7a, 0x4a, 0xe8, 0x0e, 0x5e, 0xde, 0xee, 0x83, 0x3f, 0x60, 0x3c, 0x7c, 0xa5,
	0x65, 0x67, 0x24, 0x59, 0x9c, 0xb3, 0x8f, 0x13, 0x50, 0xba, 0xd4, 0x0a, 0x54, 0x69, 0xc5, 0x7f,
	0x78, 0x46, 0x68, 0x99, 0x77, 0x28, 0xfd, 0x7c, 0xf2, 0x73, 0x0e, 0x2f, 0x94, 0xef, 0xb0, 0x0b,
	0xf1, 0x09, 0xf3, 0xc1, 0x3a, 0xc6, 0xb3, 0x3b, 0x22, 0x64, 0xdc, 0x6a, 0x39, 0x95, 0x11, 0x2b,
	0xaf, 0xb7, 0xd7, 0x6e, 0xf6, 0x8b, 0x9e, 0x90, 0x95, 0x0f, 0xdf, 0x7e, 0x7c, 0xaa, 0xd9, 0x64,
	0xa1, 0x32, 0xb2, 0xee, 0x30, 0xc5, 0x3c, 0x43, 0x1b, 0xd6, 0x10, 0xcf, 0xed, 0xb2, 0x90, 0xef,
	0xcb, 0x5b, 0x99, 0xb7, 0xf8, 0x84, 0x18, 0xd6, 0x32, 0xb9, 0x57, 0x65, 0x29, 0x16, 0x72, 0x2f,
	0x91, 0x29, 0x6d, 0x84, 0x1b, 0xdb, 0x7d, 0xca, 0x43, 0x78, 0x5d, 0x4c, 0xc3, 0x6d, 0x54, 0xdb,
	0x29, 0xe5, 0xe0, 0xe5, 0x84, 0x20, 0x1b, 0x86, 0xb8, 0x6a, 0x3f, 0xa8, 0x12, 0x7d, 0xc3, 0xf0,
	0x8a, 0x91, 0x4b, 0xc9, 0xef, 0xb1, 0x65, 0x9e, 0xb0, 0x33, 0x52, 0x4c, 0xef, 0x17, 0x8f, 0x33,
	0x0d, 0x7d, 0xd3, 0xd0, 0xd7, 0xc8, 0xea, 0xef, 0x74, 0xf0, 0x07, 0x1e, 0x8c, 0x98, 0xd2, 0xde,
	0x78, 0x0c, 0x46, 0xf8, 0x8e, 0xe1, 0xef, 0x82, 0x52, 0x4c, 0x70, 0x33, 0x43, 0x10, 0x58, 0x8b,
	0x4e, 0x16, 0x43, 0xa7, 0xc8, 0xa8, 0xd3, 0x49, 0x33, 0x7a, 0x23, 0xb8, 0x6d, 0xc0, 0x8f, 0xc9,
	0xa3, 0x3f, 0x83, 0x55, 0x46, 0xf0, 0x20, 0x47, 0xbc, 0xc3, 0xff, 0x1f, 0x40, 0x3c, 0xfe, 0x79,
	0x27, 0xa2, 0x6c, 0xf8, 0x2f, 0xda, 0x4e, 0x48, 0x95, 0x7f, 0x32, 0x81, 0xf1, 0xc0, 0x70, 0x3e,
	0x22, 0xbc, 0x58, 0x44, 0xe7, 0x3a, 0x37, 0x7b, 0x2c, 0x02, 0x6b, 0xb3, 0x7a, 0x84, 0x9b, 0x22,
	0x36, 0x4d, 0x43, 0x60, 0xbc, 0x99, 0xa7, 0x59, 0x04, 0x2f, 0x0e, 0x2e, 0x2e, 0x5b, 0xe8, 0xeb,
	0x65, 0x0b, 0x7d, 0xbf, 0x6c, 0xa1, 0x2f, 0x57, 0x2d, 0x74, 0x71, 0xd5, 0x42, 0x6f, 0x9f, 0xff,
	0xfd, 0xdf, 0x75, 0x99, 0xd6, 0x9b, 0x33, 0x6f, 0xf8, 0xf4, 0x57, 0x00, 0x00, 0x00, 0xff, 0xff,
	0x51, 0x54, 0x46, 0xb5, 0x2e, 0x06, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// AuthenticationServiceClient is the client API for AuthenticationService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type AuthenticationServiceClient interface {
	Login(ctx context.Context, in *Authentication, opts ...grpc.CallOption) (*AuthenticationResponse, error)
	SignUp(ctx context.Context, in *Authentication, opts ...grpc.CallOption) (*Authentication, error)
	ChangePassword(ctx context.Context, in *Authentication, opts ...grpc.CallOption) (*notification.Notification, error)
	CheckExsitUsername(ctx context.Context, in *Authentication, opts ...grpc.CallOption) (*notification.Notification, error)
	CheckSessionExpired(ctx context.Context, in *types.Empty, opts ...grpc.CallOption) (*notification.Notification, error)
	//Confimation and check Expiration email
	VerificationEmail(ctx context.Context, in *Authentication, opts ...grpc.CallOption) (*notification.Notification, error)
	CheckingExpirationTime(ctx context.Context, in *CheckingOtpExpirationRequest, opts ...grpc.CallOption) (*notification.Notification, error)
}

type authenticationServiceClient struct {
	cc *grpc.ClientConn
}

func NewAuthenticationServiceClient(cc *grpc.ClientConn) AuthenticationServiceClient {
	return &authenticationServiceClient{cc}
}

func (c *authenticationServiceClient) Login(ctx context.Context, in *Authentication, opts ...grpc.CallOption) (*AuthenticationResponse, error) {
	out := new(AuthenticationResponse)
	err := c.cc.Invoke(ctx, "/authentication.AuthenticationService/Login", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *authenticationServiceClient) SignUp(ctx context.Context, in *Authentication, opts ...grpc.CallOption) (*Authentication, error) {
	out := new(Authentication)
	err := c.cc.Invoke(ctx, "/authentication.AuthenticationService/SignUp", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *authenticationServiceClient) ChangePassword(ctx context.Context, in *Authentication, opts ...grpc.CallOption) (*notification.Notification, error) {
	out := new(notification.Notification)
	err := c.cc.Invoke(ctx, "/authentication.AuthenticationService/ChangePassword", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *authenticationServiceClient) CheckExsitUsername(ctx context.Context, in *Authentication, opts ...grpc.CallOption) (*notification.Notification, error) {
	out := new(notification.Notification)
	err := c.cc.Invoke(ctx, "/authentication.AuthenticationService/CheckExsitUsername", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *authenticationServiceClient) CheckSessionExpired(ctx context.Context, in *types.Empty, opts ...grpc.CallOption) (*notification.Notification, error) {
	out := new(notification.Notification)
	err := c.cc.Invoke(ctx, "/authentication.AuthenticationService/CheckSessionExpired", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *authenticationServiceClient) VerificationEmail(ctx context.Context, in *Authentication, opts ...grpc.CallOption) (*notification.Notification, error) {
	out := new(notification.Notification)
	err := c.cc.Invoke(ctx, "/authentication.AuthenticationService/VerificationEmail", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *authenticationServiceClient) CheckingExpirationTime(ctx context.Context, in *CheckingOtpExpirationRequest, opts ...grpc.CallOption) (*notification.Notification, error) {
	out := new(notification.Notification)
	err := c.cc.Invoke(ctx, "/authentication.AuthenticationService/CheckingExpirationTime", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// AuthenticationServiceServer is the server API for AuthenticationService service.
type AuthenticationServiceServer interface {
	Login(context.Context, *Authentication) (*AuthenticationResponse, error)
	SignUp(context.Context, *Authentication) (*Authentication, error)
	ChangePassword(context.Context, *Authentication) (*notification.Notification, error)
	CheckExsitUsername(context.Context, *Authentication) (*notification.Notification, error)
	CheckSessionExpired(context.Context, *types.Empty) (*notification.Notification, error)
	//Confimation and check Expiration email
	VerificationEmail(context.Context, *Authentication) (*notification.Notification, error)
	CheckingExpirationTime(context.Context, *CheckingOtpExpirationRequest) (*notification.Notification, error)
}

// UnimplementedAuthenticationServiceServer can be embedded to have forward compatible implementations.
type UnimplementedAuthenticationServiceServer struct {
}

func (*UnimplementedAuthenticationServiceServer) Login(ctx context.Context, req *Authentication) (*AuthenticationResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Login not implemented")
}
func (*UnimplementedAuthenticationServiceServer) SignUp(ctx context.Context, req *Authentication) (*Authentication, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SignUp not implemented")
}
func (*UnimplementedAuthenticationServiceServer) ChangePassword(ctx context.Context, req *Authentication) (*notification.Notification, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ChangePassword not implemented")
}
func (*UnimplementedAuthenticationServiceServer) CheckExsitUsername(ctx context.Context, req *Authentication) (*notification.Notification, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CheckExsitUsername not implemented")
}
func (*UnimplementedAuthenticationServiceServer) CheckSessionExpired(ctx context.Context, req *types.Empty) (*notification.Notification, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CheckSessionExpired not implemented")
}
func (*UnimplementedAuthenticationServiceServer) VerificationEmail(ctx context.Context, req *Authentication) (*notification.Notification, error) {
	return nil, status.Errorf(codes.Unimplemented, "method VerificationEmail not implemented")
}
func (*UnimplementedAuthenticationServiceServer) CheckingExpirationTime(ctx context.Context, req *CheckingOtpExpirationRequest) (*notification.Notification, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CheckingExpirationTime not implemented")
}

func RegisterAuthenticationServiceServer(s *grpc.Server, srv AuthenticationServiceServer) {
	s.RegisterService(&_AuthenticationService_serviceDesc, srv)
}

func _AuthenticationService_Login_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Authentication)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AuthenticationServiceServer).Login(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/authentication.AuthenticationService/Login",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AuthenticationServiceServer).Login(ctx, req.(*Authentication))
	}
	return interceptor(ctx, in, info, handler)
}

func _AuthenticationService_SignUp_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Authentication)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AuthenticationServiceServer).SignUp(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/authentication.AuthenticationService/SignUp",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AuthenticationServiceServer).SignUp(ctx, req.(*Authentication))
	}
	return interceptor(ctx, in, info, handler)
}

func _AuthenticationService_ChangePassword_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Authentication)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AuthenticationServiceServer).ChangePassword(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/authentication.AuthenticationService/ChangePassword",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AuthenticationServiceServer).ChangePassword(ctx, req.(*Authentication))
	}
	return interceptor(ctx, in, info, handler)
}

func _AuthenticationService_CheckExsitUsername_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Authentication)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AuthenticationServiceServer).CheckExsitUsername(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/authentication.AuthenticationService/CheckExsitUsername",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AuthenticationServiceServer).CheckExsitUsername(ctx, req.(*Authentication))
	}
	return interceptor(ctx, in, info, handler)
}

func _AuthenticationService_CheckSessionExpired_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(types.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AuthenticationServiceServer).CheckSessionExpired(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/authentication.AuthenticationService/CheckSessionExpired",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AuthenticationServiceServer).CheckSessionExpired(ctx, req.(*types.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _AuthenticationService_VerificationEmail_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Authentication)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AuthenticationServiceServer).VerificationEmail(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/authentication.AuthenticationService/VerificationEmail",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AuthenticationServiceServer).VerificationEmail(ctx, req.(*Authentication))
	}
	return interceptor(ctx, in, info, handler)
}

func _AuthenticationService_CheckingExpirationTime_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CheckingOtpExpirationRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AuthenticationServiceServer).CheckingExpirationTime(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/authentication.AuthenticationService/CheckingExpirationTime",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AuthenticationServiceServer).CheckingExpirationTime(ctx, req.(*CheckingOtpExpirationRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _AuthenticationService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "authentication.AuthenticationService",
	HandlerType: (*AuthenticationServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Login",
			Handler:    _AuthenticationService_Login_Handler,
		},
		{
			MethodName: "SignUp",
			Handler:    _AuthenticationService_SignUp_Handler,
		},
		{
			MethodName: "ChangePassword",
			Handler:    _AuthenticationService_ChangePassword_Handler,
		},
		{
			MethodName: "CheckExsitUsername",
			Handler:    _AuthenticationService_CheckExsitUsername_Handler,
		},
		{
			MethodName: "CheckSessionExpired",
			Handler:    _AuthenticationService_CheckSessionExpired_Handler,
		},
		{
			MethodName: "VerificationEmail",
			Handler:    _AuthenticationService_VerificationEmail_Handler,
		},
		{
			MethodName: "CheckingExpirationTime",
			Handler:    _AuthenticationService_CheckingExpirationTime_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "authentication/authentication.proto",
}

func (m *Authentication) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *Authentication) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *Authentication) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.UpdatedAt) > 0 {
		i -= len(m.UpdatedAt)
		copy(dAtA[i:], m.UpdatedAt)
		i = encodeVarintAuthentication(dAtA, i, uint64(len(m.UpdatedAt)))
		i--
		dAtA[i] = 0x1
		i--
		dAtA[i] = 0xaa
	}
	if len(m.CreatedAt) > 0 {
		i -= len(m.CreatedAt)
		copy(dAtA[i:], m.CreatedAt)
		i = encodeVarintAuthentication(dAtA, i, uint64(len(m.CreatedAt)))
		i--
		dAtA[i] = 0x1
		i--
		dAtA[i] = 0xa2
	}
	if len(m.Password) > 0 {
		i -= len(m.Password)
		copy(dAtA[i:], m.Password)
		i = encodeVarintAuthentication(dAtA, i, uint64(len(m.Password)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.Username) > 0 {
		i -= len(m.Username)
		copy(dAtA[i:], m.Username)
		i = encodeVarintAuthentication(dAtA, i, uint64(len(m.Username)))
		i--
		dAtA[i] = 0x12
	}
	if m.Id != 0 {
		i = encodeVarintAuthentication(dAtA, i, uint64(m.Id))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *AuthenticationResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *AuthenticationResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *AuthenticationResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.UpdatedAt) > 0 {
		i -= len(m.UpdatedAt)
		copy(dAtA[i:], m.UpdatedAt)
		i = encodeVarintAuthentication(dAtA, i, uint64(len(m.UpdatedAt)))
		i--
		dAtA[i] = 0x1
		i--
		dAtA[i] = 0xaa
	}
	if len(m.CreatedAt) > 0 {
		i -= len(m.CreatedAt)
		copy(dAtA[i:], m.CreatedAt)
		i = encodeVarintAuthentication(dAtA, i, uint64(len(m.CreatedAt)))
		i--
		dAtA[i] = 0x1
		i--
		dAtA[i] = 0xa2
	}
	if len(m.JwtToken) > 0 {
		i -= len(m.JwtToken)
		copy(dAtA[i:], m.JwtToken)
		i = encodeVarintAuthentication(dAtA, i, uint64(len(m.JwtToken)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *CheckingOtpExpirationRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *CheckingOtpExpirationRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *CheckingOtpExpirationRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Otp) > 0 {
		i -= len(m.Otp)
		copy(dAtA[i:], m.Otp)
		i = encodeVarintAuthentication(dAtA, i, uint64(len(m.Otp)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Username) > 0 {
		i -= len(m.Username)
		copy(dAtA[i:], m.Username)
		i = encodeVarintAuthentication(dAtA, i, uint64(len(m.Username)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func encodeVarintAuthentication(dAtA []byte, offset int, v uint64) int {
	offset -= sovAuthentication(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func (m *Authentication) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Id != 0 {
		n += 1 + sovAuthentication(uint64(m.Id))
	}
	l = len(m.Username)
	if l > 0 {
		n += 1 + l + sovAuthentication(uint64(l))
	}
	l = len(m.Password)
	if l > 0 {
		n += 1 + l + sovAuthentication(uint64(l))
	}
	l = len(m.CreatedAt)
	if l > 0 {
		n += 2 + l + sovAuthentication(uint64(l))
	}
	l = len(m.UpdatedAt)
	if l > 0 {
		n += 2 + l + sovAuthentication(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *AuthenticationResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.JwtToken)
	if l > 0 {
		n += 1 + l + sovAuthentication(uint64(l))
	}
	l = len(m.CreatedAt)
	if l > 0 {
		n += 2 + l + sovAuthentication(uint64(l))
	}
	l = len(m.UpdatedAt)
	if l > 0 {
		n += 2 + l + sovAuthentication(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *CheckingOtpExpirationRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Username)
	if l > 0 {
		n += 1 + l + sovAuthentication(uint64(l))
	}
	l = len(m.Otp)
	if l > 0 {
		n += 1 + l + sovAuthentication(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func sovAuthentication(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozAuthentication(x uint64) (n int) {
	return sovAuthentication(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *Authentication) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowAuthentication
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: Authentication: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: Authentication: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			m.Id = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowAuthentication
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Id |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Username", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowAuthentication
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthAuthentication
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthAuthentication
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Username = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Password", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowAuthentication
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthAuthentication
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthAuthentication
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Password = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 20:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field CreatedAt", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowAuthentication
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthAuthentication
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthAuthentication
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.CreatedAt = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 21:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field UpdatedAt", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowAuthentication
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthAuthentication
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthAuthentication
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.UpdatedAt = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipAuthentication(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthAuthentication
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *AuthenticationResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowAuthentication
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: AuthenticationResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: AuthenticationResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field JwtToken", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowAuthentication
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthAuthentication
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthAuthentication
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.JwtToken = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 20:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field CreatedAt", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowAuthentication
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthAuthentication
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthAuthentication
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.CreatedAt = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 21:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field UpdatedAt", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowAuthentication
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthAuthentication
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthAuthentication
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.UpdatedAt = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipAuthentication(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthAuthentication
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *CheckingOtpExpirationRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowAuthentication
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: CheckingOtpExpirationRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: CheckingOtpExpirationRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Username", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowAuthentication
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthAuthentication
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthAuthentication
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Username = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Otp", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowAuthentication
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthAuthentication
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthAuthentication
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Otp = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipAuthentication(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthAuthentication
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipAuthentication(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowAuthentication
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowAuthentication
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowAuthentication
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthAuthentication
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupAuthentication
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthAuthentication
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthAuthentication        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowAuthentication          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupAuthentication = fmt.Errorf("proto: unexpected end of group")
)
