// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: booking/booking.proto

package booking

import (
	fmt "fmt"
	math "math"
	proto "github.com/gogo/protobuf/proto"
	golang_proto "github.com/golang/protobuf/proto"
	_ "github.com/gogo/protobuf/gogoproto"
	_ "github.com/gogo/googleapis/google/api"
	_ "github.com/nekizz/final-project/backend/go-pbtype/payment"
	_ "github.com/nekizz/final-project/backend/go-pbtype/bookedroom"
	_ "github.com/nekizz/final-project/backend/go-pbtype/hotel"
	_ "github.com/nekizz/final-project/backend/go-pbtype/notification"
	github_com_mwitkow_go_proto_validators "github.com/mwitkow/go-proto-validators"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = golang_proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

func (this *Booking) Validate() error {
	if this.Hotel != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.Hotel); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("Hotel", err)
		}
	}
	if this.Payment != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.Payment); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("Payment", err)
		}
	}
	for _, item := range this.Bookedroom {
		if item != nil {
			if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(item); err != nil {
				return github_com_mwitkow_go_proto_validators.FieldError("Bookedroom", err)
			}
		}
	}
	return nil
}
func (this *BookingV2) Validate() error {
	for _, item := range this.Bookedroom {
		if item != nil {
			if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(item); err != nil {
				return github_com_mwitkow_go_proto_validators.FieldError("Bookedroom", err)
			}
		}
	}
	return nil
}
func (this *OneBookingRequest) Validate() error {
	return nil
}
func (this *ListCustomerBookingRequest) Validate() error {
	return nil
}
func (this *ListCustomerBookingResponse) Validate() error {
	for _, item := range this.Items {
		if item != nil {
			if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(item); err != nil {
				return github_com_mwitkow_go_proto_validators.FieldError("Items", err)
			}
		}
	}
	return nil
}
func (this *ListHostBookingRequest) Validate() error {
	return nil
}
func (this *ListHostBookingResponse) Validate() error {
	for _, item := range this.Items {
		if item != nil {
			if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(item); err != nil {
				return github_com_mwitkow_go_proto_validators.FieldError("Items", err)
			}
		}
	}
	return nil
}
