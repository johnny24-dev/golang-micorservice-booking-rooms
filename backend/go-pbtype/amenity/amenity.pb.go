// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: amenity/amenity.proto

package amenity

import (
	context "context"
	fmt "fmt"
	_ "github.com/gogo/googleapis/google/api"
	_ "github.com/gogo/protobuf/gogoproto"
	proto "github.com/gogo/protobuf/proto"
	types "github.com/gogo/protobuf/types"
	golang_proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	io "io"
	math "math"
	math_bits "math/bits"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = golang_proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

type Amenity struct {
	Id                   int32    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name                 string   `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	RoomId               int32    `protobuf:"varint,3,opt,name=room_id,json=roomId,proto3" json:"room_id,omitempty"`
	CreatedAt            string   `protobuf:"bytes,20,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt            string   `protobuf:"bytes,21,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Amenity) Reset()         { *m = Amenity{} }
func (m *Amenity) String() string { return proto.CompactTextString(m) }
func (*Amenity) ProtoMessage()    {}
func (*Amenity) Descriptor() ([]byte, []int) {
	return fileDescriptor_583431513ebe3791, []int{0}
}
func (m *Amenity) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *Amenity) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_Amenity.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *Amenity) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Amenity.Merge(m, src)
}
func (m *Amenity) XXX_Size() int {
	return m.Size()
}
func (m *Amenity) XXX_DiscardUnknown() {
	xxx_messageInfo_Amenity.DiscardUnknown(m)
}

var xxx_messageInfo_Amenity proto.InternalMessageInfo

func (m *Amenity) GetId() int32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *Amenity) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Amenity) GetRoomId() int32 {
	if m != nil {
		return m.RoomId
	}
	return 0
}

func (m *Amenity) GetCreatedAt() string {
	if m != nil {
		return m.CreatedAt
	}
	return ""
}

func (m *Amenity) GetUpdatedAt() string {
	if m != nil {
		return m.UpdatedAt
	}
	return ""
}

func (*Amenity) XXX_MessageName() string {
	return "amenity.Amenity"
}

type OneAmenityRequest struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *OneAmenityRequest) Reset()         { *m = OneAmenityRequest{} }
func (m *OneAmenityRequest) String() string { return proto.CompactTextString(m) }
func (*OneAmenityRequest) ProtoMessage()    {}
func (*OneAmenityRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_583431513ebe3791, []int{1}
}
func (m *OneAmenityRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *OneAmenityRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_OneAmenityRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *OneAmenityRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OneAmenityRequest.Merge(m, src)
}
func (m *OneAmenityRequest) XXX_Size() int {
	return m.Size()
}
func (m *OneAmenityRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_OneAmenityRequest.DiscardUnknown(m)
}

var xxx_messageInfo_OneAmenityRequest proto.InternalMessageInfo

func (m *OneAmenityRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (*OneAmenityRequest) XXX_MessageName() string {
	return "amenity.OneAmenityRequest"
}

type ListAmenityRequest struct {
	Page                 uint32   `protobuf:"varint,3,opt,name=page,proto3" json:"page,omitempty"`
	Limit                uint32   `protobuf:"varint,4,opt,name=limit,proto3" json:"limit,omitempty"`
	CreatedAtMin         string   `protobuf:"bytes,5,opt,name=created_at_min,json=createdAtMin,proto3" json:"created_at_min,omitempty"`
	CreatedAtMax         string   `protobuf:"bytes,6,opt,name=created_at_max,json=createdAtMax,proto3" json:"created_at_max,omitempty"`
	SearchField          string   `protobuf:"bytes,7,opt,name=search_field,json=searchField,proto3" json:"search_field,omitempty"`
	SearchValue          string   `protobuf:"bytes,8,opt,name=search_value,json=searchValue,proto3" json:"search_value,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListAmenityRequest) Reset()         { *m = ListAmenityRequest{} }
func (m *ListAmenityRequest) String() string { return proto.CompactTextString(m) }
func (*ListAmenityRequest) ProtoMessage()    {}
func (*ListAmenityRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_583431513ebe3791, []int{2}
}
func (m *ListAmenityRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ListAmenityRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_ListAmenityRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *ListAmenityRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListAmenityRequest.Merge(m, src)
}
func (m *ListAmenityRequest) XXX_Size() int {
	return m.Size()
}
func (m *ListAmenityRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ListAmenityRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ListAmenityRequest proto.InternalMessageInfo

func (m *ListAmenityRequest) GetPage() uint32 {
	if m != nil {
		return m.Page
	}
	return 0
}

func (m *ListAmenityRequest) GetLimit() uint32 {
	if m != nil {
		return m.Limit
	}
	return 0
}

func (m *ListAmenityRequest) GetCreatedAtMin() string {
	if m != nil {
		return m.CreatedAtMin
	}
	return ""
}

func (m *ListAmenityRequest) GetCreatedAtMax() string {
	if m != nil {
		return m.CreatedAtMax
	}
	return ""
}

func (m *ListAmenityRequest) GetSearchField() string {
	if m != nil {
		return m.SearchField
	}
	return ""
}

func (m *ListAmenityRequest) GetSearchValue() string {
	if m != nil {
		return m.SearchValue
	}
	return ""
}

func (*ListAmenityRequest) XXX_MessageName() string {
	return "amenity.ListAmenityRequest"
}

type ListAmenityResponse struct {
	Items                []*Amenity `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
	MaxPage              uint32     `protobuf:"varint,2,opt,name=max_page,json=maxPage,proto3" json:"max_page,omitempty"`
	TotalCount           uint32     `protobuf:"varint,3,opt,name=total_count,json=totalCount,proto3" json:"total_count,omitempty"`
	Page                 uint32     `protobuf:"varint,4,opt,name=page,proto3" json:"page,omitempty"`
	Limit                uint32     `protobuf:"varint,5,opt,name=limit,proto3" json:"limit,omitempty"`
	SearchField          string     `protobuf:"bytes,6,opt,name=search_field,json=searchField,proto3" json:"search_field,omitempty"`
	SearchValue          string     `protobuf:"bytes,7,opt,name=search_value,json=searchValue,proto3" json:"search_value,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *ListAmenityResponse) Reset()         { *m = ListAmenityResponse{} }
func (m *ListAmenityResponse) String() string { return proto.CompactTextString(m) }
func (*ListAmenityResponse) ProtoMessage()    {}
func (*ListAmenityResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_583431513ebe3791, []int{3}
}
func (m *ListAmenityResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ListAmenityResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_ListAmenityResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *ListAmenityResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListAmenityResponse.Merge(m, src)
}
func (m *ListAmenityResponse) XXX_Size() int {
	return m.Size()
}
func (m *ListAmenityResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ListAmenityResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ListAmenityResponse proto.InternalMessageInfo

func (m *ListAmenityResponse) GetItems() []*Amenity {
	if m != nil {
		return m.Items
	}
	return nil
}

func (m *ListAmenityResponse) GetMaxPage() uint32 {
	if m != nil {
		return m.MaxPage
	}
	return 0
}

func (m *ListAmenityResponse) GetTotalCount() uint32 {
	if m != nil {
		return m.TotalCount
	}
	return 0
}

func (m *ListAmenityResponse) GetPage() uint32 {
	if m != nil {
		return m.Page
	}
	return 0
}

func (m *ListAmenityResponse) GetLimit() uint32 {
	if m != nil {
		return m.Limit
	}
	return 0
}

func (m *ListAmenityResponse) GetSearchField() string {
	if m != nil {
		return m.SearchField
	}
	return ""
}

func (m *ListAmenityResponse) GetSearchValue() string {
	if m != nil {
		return m.SearchValue
	}
	return ""
}

func (*ListAmenityResponse) XXX_MessageName() string {
	return "amenity.ListAmenityResponse"
}
func init() {
	proto.RegisterType((*Amenity)(nil), "amenity.Amenity")
	golang_proto.RegisterType((*Amenity)(nil), "amenity.Amenity")
	proto.RegisterType((*OneAmenityRequest)(nil), "amenity.OneAmenityRequest")
	golang_proto.RegisterType((*OneAmenityRequest)(nil), "amenity.OneAmenityRequest")
	proto.RegisterType((*ListAmenityRequest)(nil), "amenity.ListAmenityRequest")
	golang_proto.RegisterType((*ListAmenityRequest)(nil), "amenity.ListAmenityRequest")
	proto.RegisterType((*ListAmenityResponse)(nil), "amenity.ListAmenityResponse")
	golang_proto.RegisterType((*ListAmenityResponse)(nil), "amenity.ListAmenityResponse")
}

func init() { proto.RegisterFile("amenity/amenity.proto", fileDescriptor_583431513ebe3791) }
func init() { golang_proto.RegisterFile("amenity/amenity.proto", fileDescriptor_583431513ebe3791) }

var fileDescriptor_583431513ebe3791 = []byte{
	// 618 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x8c, 0x54, 0xcd, 0x6e, 0xd3, 0x4c,
	0x14, 0xd5, 0xe4, 0xc7, 0x69, 0x6e, 0xda, 0x7e, 0x5f, 0xa7, 0x2d, 0x98, 0x50, 0x42, 0x31, 0x08,
	0x55, 0x95, 0x1a, 0x4b, 0x65, 0x05, 0xbb, 0x50, 0x28, 0x02, 0x81, 0x8a, 0x52, 0xc1, 0x82, 0x4d,
	0x34, 0xb1, 0x6f, 0xdd, 0xa1, 0xf6, 0x8c, 0xb1, 0xc7, 0x55, 0x5a, 0xc4, 0x06, 0xf1, 0x02, 0x88,
	0x17, 0x62, 0xd9, 0x65, 0x25, 0x5e, 0x00, 0xb5, 0x6c, 0x78, 0x0b, 0xe4, 0xb1, 0x9d, 0xa6, 0x49,
	0x54, 0x58, 0x79, 0xee, 0x39, 0x67, 0x8e, 0xcf, 0xbd, 0x1e, 0x0f, 0x2c, 0xb3, 0x00, 0x05, 0x57,
	0x47, 0x76, 0xfe, 0x6c, 0x87, 0x91, 0x54, 0x92, 0xd6, 0xf2, 0xb2, 0xb9, 0xe1, 0x71, 0xb5, 0x9f,
	0xf4, 0xdb, 0x8e, 0x0c, 0x6c, 0x4f, 0x7a, 0xd2, 0xd6, 0x7c, 0x3f, 0xd9, 0xd3, 0x95, 0x2e, 0xf4,
	0x2a, 0xdb, 0xd7, 0xbc, 0xe9, 0x49, 0xe9, 0xf9, 0x78, 0xa1, 0xc2, 0x20, 0x2c, 0x4c, 0x9b, 0x2b,
	0x39, 0xc9, 0x42, 0x6e, 0x33, 0x21, 0xa4, 0x62, 0x8a, 0x4b, 0x11, 0x67, 0xac, 0xf5, 0x85, 0x40,
	0xad, 0x93, 0xbd, 0x95, 0xce, 0x43, 0x89, 0xbb, 0x26, 0x59, 0x25, 0x6b, 0xd5, 0x6e, 0x89, 0xbb,
	0x94, 0x42, 0x45, 0xb0, 0x00, 0xcd, 0xd2, 0x2a, 0x59, 0xab, 0x77, 0xf5, 0x9a, 0x5e, 0x87, 0x5a,
	0x24, 0x65, 0xd0, 0xe3, 0xae, 0x59, 0xd6, 0x42, 0x23, 0x2d, 0x9f, 0xbb, 0xf4, 0x16, 0x80, 0x13,
	0x21, 0x53, 0xe8, 0xf6, 0x98, 0x32, 0x97, 0xf4, 0x96, 0x7a, 0x8e, 0x74, 0x54, 0x4a, 0x27, 0xa1,
	0x5b, 0xd0, 0xcb, 0x19, 0x9d, 0x23, 0x1d, 0x65, 0xdd, 0x85, 0x85, 0x1d, 0x81, 0x79, 0x90, 0x2e,
	0x7e, 0x48, 0x30, 0x56, 0x23, 0x79, 0xea, 0x69, 0x1e, 0xeb, 0x94, 0x00, 0x7d, 0xc9, 0x63, 0x35,
	0x26, 0xa3, 0x50, 0x09, 0x99, 0x87, 0x3a, 0xcf, 0x5c, 0x57, 0xaf, 0xe9, 0x12, 0x54, 0x7d, 0x1e,
	0x70, 0x65, 0x56, 0x34, 0x98, 0x15, 0xf4, 0x1e, 0xcc, 0x5f, 0x64, 0xec, 0x05, 0x5c, 0x98, 0x55,
	0x6d, 0x3e, 0x3b, 0xcc, 0xf9, 0x8a, 0x8b, 0x71, 0x15, 0x1b, 0x98, 0xc6, 0xb8, 0x8a, 0x0d, 0xe8,
	0x1d, 0x98, 0x8d, 0x91, 0x45, 0xce, 0x7e, 0x6f, 0x8f, 0xa3, 0xef, 0x9a, 0x35, 0xad, 0x69, 0x64,
	0xd8, 0x76, 0x0a, 0x8d, 0x48, 0x0e, 0x99, 0x9f, 0xa0, 0x39, 0x33, 0x2a, 0x79, 0x9b, 0x42, 0xd6,
	0x6f, 0x02, 0x8b, 0x97, 0x5a, 0x8a, 0x43, 0x29, 0x62, 0xa4, 0xf7, 0xa1, 0xca, 0x15, 0x06, 0xb1,
	0x49, 0x56, 0xcb, 0x6b, 0x8d, 0xcd, 0xff, 0xdb, 0xc5, 0x41, 0x29, 0x84, 0x19, 0x4d, 0x6f, 0xc0,
	0x4c, 0xc0, 0x06, 0x3d, 0xdd, 0x7f, 0x49, 0xb7, 0x5a, 0x0b, 0xd8, 0xe0, 0x75, 0x3a, 0x82, 0xdb,
	0xd0, 0x50, 0x52, 0x31, 0xbf, 0xe7, 0xc8, 0x44, 0xa8, 0x7c, 0x3a, 0xa0, 0xa1, 0xad, 0x14, 0x19,
	0xce, 0xad, 0x32, 0x6d, 0x6e, 0xd5, 0xd1, 0xb9, 0x8d, 0xf7, 0x6a, 0xfc, 0xbd, 0xd7, 0xda, 0x44,
	0xaf, 0x9b, 0x5f, 0xcb, 0x30, 0x9f, 0xc7, 0xdf, 0xc5, 0xe8, 0x90, 0x3b, 0x48, 0x3b, 0x60, 0x6c,
	0xe9, 0xa1, 0xd2, 0x89, 0x0e, 0x9b, 0x13, 0x88, 0xb5, 0xf8, 0xf9, 0xc7, 0xaf, 0x6f, 0xa5, 0x39,
	0x6b, 0xa6, 0xf8, 0x6d, 0x1e, 0x91, 0x75, 0xba, 0x0d, 0xc6, 0x1b, 0x7d, 0x8c, 0xfe, 0xc9, 0xc2,
	0xd4, 0x16, 0xb4, 0x39, 0x57, 0x58, 0xd8, 0x1f, 0xb9, 0xfb, 0x29, 0xf5, 0x79, 0x01, 0xe5, 0x67,
	0xa8, 0x68, 0x73, 0xb8, 0x65, 0xe2, 0x3c, 0x4e, 0xb1, 0x5b, 0xd6, 0x76, 0xff, 0xd1, 0xcb, 0x76,
	0x74, 0x17, 0x2a, 0xe9, 0x47, 0xbd, 0xd2, 0x6c, 0x65, 0xc8, 0x4d, 0xf9, 0xfe, 0xd6, 0x82, 0x36,
	0x6e, 0xd0, 0x7a, 0x61, 0x1c, 0xd3, 0x5d, 0x30, 0x9e, 0xa0, 0x8f, 0x0a, 0xaf, 0xb4, 0xbd, 0xd6,
	0xce, 0x7e, 0xf7, 0x76, 0x71, 0x17, 0xb4, 0x9f, 0xa6, 0x77, 0x41, 0x91, 0x74, 0xfd, 0x72, 0xd2,
	0xc7, 0x3b, 0x27, 0x67, 0x2d, 0x72, 0x7a, 0xd6, 0x22, 0x3f, 0xcf, 0x5a, 0xe4, 0xfb, 0x79, 0x8b,
	0x9c, 0x9c, 0xb7, 0xc8, 0xbb, 0x87, 0x23, 0xd7, 0x8f, 0xc0, 0x03, 0x7e, 0x7c, 0x6c, 0xef, 0x71,
	0xc1, 0xfc, 0x8d, 0x30, 0x92, 0xef, 0xd1, 0x51, 0x76, 0x9f, 0x39, 0x07, 0x28, 0x5c, 0xdb, 0x93,
	0x1b, 0x61, 0x5f, 0x1d, 0x85, 0x58, 0xb8, 0xf6, 0x0d, 0xfd, 0xde, 0x07, 0x7f, 0x02, 0x00, 0x00,
	0xff, 0xff, 0x63, 0x5e, 0x65, 0xc7, 0xe2, 0x04, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// AmenityServiceClient is the client API for AmenityService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type AmenityServiceClient interface {
	Create(ctx context.Context, in *Amenity, opts ...grpc.CallOption) (*Amenity, error)
	Update(ctx context.Context, in *Amenity, opts ...grpc.CallOption) (*Amenity, error)
	Get(ctx context.Context, in *OneAmenityRequest, opts ...grpc.CallOption) (*Amenity, error)
	List(ctx context.Context, in *OneAmenityRequest, opts ...grpc.CallOption) (*ListAmenityResponse, error)
	Delete(ctx context.Context, in *OneAmenityRequest, opts ...grpc.CallOption) (*types.Empty, error)
}

type amenityServiceClient struct {
	cc *grpc.ClientConn
}

func NewAmenityServiceClient(cc *grpc.ClientConn) AmenityServiceClient {
	return &amenityServiceClient{cc}
}

func (c *amenityServiceClient) Create(ctx context.Context, in *Amenity, opts ...grpc.CallOption) (*Amenity, error) {
	out := new(Amenity)
	err := c.cc.Invoke(ctx, "/amenity.AmenityService/Create", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *amenityServiceClient) Update(ctx context.Context, in *Amenity, opts ...grpc.CallOption) (*Amenity, error) {
	out := new(Amenity)
	err := c.cc.Invoke(ctx, "/amenity.AmenityService/Update", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *amenityServiceClient) Get(ctx context.Context, in *OneAmenityRequest, opts ...grpc.CallOption) (*Amenity, error) {
	out := new(Amenity)
	err := c.cc.Invoke(ctx, "/amenity.AmenityService/Get", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *amenityServiceClient) List(ctx context.Context, in *OneAmenityRequest, opts ...grpc.CallOption) (*ListAmenityResponse, error) {
	out := new(ListAmenityResponse)
	err := c.cc.Invoke(ctx, "/amenity.AmenityService/List", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *amenityServiceClient) Delete(ctx context.Context, in *OneAmenityRequest, opts ...grpc.CallOption) (*types.Empty, error) {
	out := new(types.Empty)
	err := c.cc.Invoke(ctx, "/amenity.AmenityService/Delete", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// AmenityServiceServer is the server API for AmenityService service.
type AmenityServiceServer interface {
	Create(context.Context, *Amenity) (*Amenity, error)
	Update(context.Context, *Amenity) (*Amenity, error)
	Get(context.Context, *OneAmenityRequest) (*Amenity, error)
	List(context.Context, *OneAmenityRequest) (*ListAmenityResponse, error)
	Delete(context.Context, *OneAmenityRequest) (*types.Empty, error)
}

// UnimplementedAmenityServiceServer can be embedded to have forward compatible implementations.
type UnimplementedAmenityServiceServer struct {
}

func (*UnimplementedAmenityServiceServer) Create(ctx context.Context, req *Amenity) (*Amenity, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Create not implemented")
}
func (*UnimplementedAmenityServiceServer) Update(ctx context.Context, req *Amenity) (*Amenity, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Update not implemented")
}
func (*UnimplementedAmenityServiceServer) Get(ctx context.Context, req *OneAmenityRequest) (*Amenity, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Get not implemented")
}
func (*UnimplementedAmenityServiceServer) List(ctx context.Context, req *OneAmenityRequest) (*ListAmenityResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method List not implemented")
}
func (*UnimplementedAmenityServiceServer) Delete(ctx context.Context, req *OneAmenityRequest) (*types.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Delete not implemented")
}

func RegisterAmenityServiceServer(s *grpc.Server, srv AmenityServiceServer) {
	s.RegisterService(&_AmenityService_serviceDesc, srv)
}

func _AmenityService_Create_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Amenity)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AmenityServiceServer).Create(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/amenity.AmenityService/Create",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AmenityServiceServer).Create(ctx, req.(*Amenity))
	}
	return interceptor(ctx, in, info, handler)
}

func _AmenityService_Update_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Amenity)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AmenityServiceServer).Update(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/amenity.AmenityService/Update",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AmenityServiceServer).Update(ctx, req.(*Amenity))
	}
	return interceptor(ctx, in, info, handler)
}

func _AmenityService_Get_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(OneAmenityRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AmenityServiceServer).Get(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/amenity.AmenityService/Get",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AmenityServiceServer).Get(ctx, req.(*OneAmenityRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AmenityService_List_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(OneAmenityRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AmenityServiceServer).List(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/amenity.AmenityService/List",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AmenityServiceServer).List(ctx, req.(*OneAmenityRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AmenityService_Delete_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(OneAmenityRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AmenityServiceServer).Delete(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/amenity.AmenityService/Delete",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AmenityServiceServer).Delete(ctx, req.(*OneAmenityRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _AmenityService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "amenity.AmenityService",
	HandlerType: (*AmenityServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Create",
			Handler:    _AmenityService_Create_Handler,
		},
		{
			MethodName: "Update",
			Handler:    _AmenityService_Update_Handler,
		},
		{
			MethodName: "Get",
			Handler:    _AmenityService_Get_Handler,
		},
		{
			MethodName: "List",
			Handler:    _AmenityService_List_Handler,
		},
		{
			MethodName: "Delete",
			Handler:    _AmenityService_Delete_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "amenity/amenity.proto",
}

func (m *Amenity) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *Amenity) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *Amenity) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.UpdatedAt) > 0 {
		i -= len(m.UpdatedAt)
		copy(dAtA[i:], m.UpdatedAt)
		i = encodeVarintAmenity(dAtA, i, uint64(len(m.UpdatedAt)))
		i--
		dAtA[i] = 0x1
		i--
		dAtA[i] = 0xaa
	}
	if len(m.CreatedAt) > 0 {
		i -= len(m.CreatedAt)
		copy(dAtA[i:], m.CreatedAt)
		i = encodeVarintAmenity(dAtA, i, uint64(len(m.CreatedAt)))
		i--
		dAtA[i] = 0x1
		i--
		dAtA[i] = 0xa2
	}
	if m.RoomId != 0 {
		i = encodeVarintAmenity(dAtA, i, uint64(m.RoomId))
		i--
		dAtA[i] = 0x18
	}
	if len(m.Name) > 0 {
		i -= len(m.Name)
		copy(dAtA[i:], m.Name)
		i = encodeVarintAmenity(dAtA, i, uint64(len(m.Name)))
		i--
		dAtA[i] = 0x12
	}
	if m.Id != 0 {
		i = encodeVarintAmenity(dAtA, i, uint64(m.Id))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *OneAmenityRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *OneAmenityRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *OneAmenityRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Id) > 0 {
		i -= len(m.Id)
		copy(dAtA[i:], m.Id)
		i = encodeVarintAmenity(dAtA, i, uint64(len(m.Id)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *ListAmenityRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ListAmenityRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ListAmenityRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.SearchValue) > 0 {
		i -= len(m.SearchValue)
		copy(dAtA[i:], m.SearchValue)
		i = encodeVarintAmenity(dAtA, i, uint64(len(m.SearchValue)))
		i--
		dAtA[i] = 0x42
	}
	if len(m.SearchField) > 0 {
		i -= len(m.SearchField)
		copy(dAtA[i:], m.SearchField)
		i = encodeVarintAmenity(dAtA, i, uint64(len(m.SearchField)))
		i--
		dAtA[i] = 0x3a
	}
	if len(m.CreatedAtMax) > 0 {
		i -= len(m.CreatedAtMax)
		copy(dAtA[i:], m.CreatedAtMax)
		i = encodeVarintAmenity(dAtA, i, uint64(len(m.CreatedAtMax)))
		i--
		dAtA[i] = 0x32
	}
	if len(m.CreatedAtMin) > 0 {
		i -= len(m.CreatedAtMin)
		copy(dAtA[i:], m.CreatedAtMin)
		i = encodeVarintAmenity(dAtA, i, uint64(len(m.CreatedAtMin)))
		i--
		dAtA[i] = 0x2a
	}
	if m.Limit != 0 {
		i = encodeVarintAmenity(dAtA, i, uint64(m.Limit))
		i--
		dAtA[i] = 0x20
	}
	if m.Page != 0 {
		i = encodeVarintAmenity(dAtA, i, uint64(m.Page))
		i--
		dAtA[i] = 0x18
	}
	return len(dAtA) - i, nil
}

func (m *ListAmenityResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ListAmenityResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ListAmenityResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.SearchValue) > 0 {
		i -= len(m.SearchValue)
		copy(dAtA[i:], m.SearchValue)
		i = encodeVarintAmenity(dAtA, i, uint64(len(m.SearchValue)))
		i--
		dAtA[i] = 0x3a
	}
	if len(m.SearchField) > 0 {
		i -= len(m.SearchField)
		copy(dAtA[i:], m.SearchField)
		i = encodeVarintAmenity(dAtA, i, uint64(len(m.SearchField)))
		i--
		dAtA[i] = 0x32
	}
	if m.Limit != 0 {
		i = encodeVarintAmenity(dAtA, i, uint64(m.Limit))
		i--
		dAtA[i] = 0x28
	}
	if m.Page != 0 {
		i = encodeVarintAmenity(dAtA, i, uint64(m.Page))
		i--
		dAtA[i] = 0x20
	}
	if m.TotalCount != 0 {
		i = encodeVarintAmenity(dAtA, i, uint64(m.TotalCount))
		i--
		dAtA[i] = 0x18
	}
	if m.MaxPage != 0 {
		i = encodeVarintAmenity(dAtA, i, uint64(m.MaxPage))
		i--
		dAtA[i] = 0x10
	}
	if len(m.Items) > 0 {
		for iNdEx := len(m.Items) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.Items[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintAmenity(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0xa
		}
	}
	return len(dAtA) - i, nil
}

func encodeVarintAmenity(dAtA []byte, offset int, v uint64) int {
	offset -= sovAmenity(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func (m *Amenity) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Id != 0 {
		n += 1 + sovAmenity(uint64(m.Id))
	}
	l = len(m.Name)
	if l > 0 {
		n += 1 + l + sovAmenity(uint64(l))
	}
	if m.RoomId != 0 {
		n += 1 + sovAmenity(uint64(m.RoomId))
	}
	l = len(m.CreatedAt)
	if l > 0 {
		n += 2 + l + sovAmenity(uint64(l))
	}
	l = len(m.UpdatedAt)
	if l > 0 {
		n += 2 + l + sovAmenity(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *OneAmenityRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Id)
	if l > 0 {
		n += 1 + l + sovAmenity(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *ListAmenityRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Page != 0 {
		n += 1 + sovAmenity(uint64(m.Page))
	}
	if m.Limit != 0 {
		n += 1 + sovAmenity(uint64(m.Limit))
	}
	l = len(m.CreatedAtMin)
	if l > 0 {
		n += 1 + l + sovAmenity(uint64(l))
	}
	l = len(m.CreatedAtMax)
	if l > 0 {
		n += 1 + l + sovAmenity(uint64(l))
	}
	l = len(m.SearchField)
	if l > 0 {
		n += 1 + l + sovAmenity(uint64(l))
	}
	l = len(m.SearchValue)
	if l > 0 {
		n += 1 + l + sovAmenity(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *ListAmenityResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if len(m.Items) > 0 {
		for _, e := range m.Items {
			l = e.Size()
			n += 1 + l + sovAmenity(uint64(l))
		}
	}
	if m.MaxPage != 0 {
		n += 1 + sovAmenity(uint64(m.MaxPage))
	}
	if m.TotalCount != 0 {
		n += 1 + sovAmenity(uint64(m.TotalCount))
	}
	if m.Page != 0 {
		n += 1 + sovAmenity(uint64(m.Page))
	}
	if m.Limit != 0 {
		n += 1 + sovAmenity(uint64(m.Limit))
	}
	l = len(m.SearchField)
	if l > 0 {
		n += 1 + l + sovAmenity(uint64(l))
	}
	l = len(m.SearchValue)
	if l > 0 {
		n += 1 + l + sovAmenity(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func sovAmenity(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozAmenity(x uint64) (n int) {
	return sovAmenity(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *Amenity) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowAmenity
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: Amenity: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: Amenity: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			m.Id = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowAmenity
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Id |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Name", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowAmenity
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthAmenity
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthAmenity
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Name = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field RoomId", wireType)
			}
			m.RoomId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowAmenity
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.RoomId |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 20:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field CreatedAt", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowAmenity
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthAmenity
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthAmenity
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.CreatedAt = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 21:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field UpdatedAt", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowAmenity
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthAmenity
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthAmenity
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.UpdatedAt = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipAmenity(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthAmenity
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *OneAmenityRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowAmenity
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: OneAmenityRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: OneAmenityRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowAmenity
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthAmenity
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthAmenity
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Id = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipAmenity(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthAmenity
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *ListAmenityRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowAmenity
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ListAmenityRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ListAmenityRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Page", wireType)
			}
			m.Page = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowAmenity
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Page |= uint32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Limit", wireType)
			}
			m.Limit = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowAmenity
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Limit |= uint32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field CreatedAtMin", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowAmenity
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthAmenity
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthAmenity
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.CreatedAtMin = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field CreatedAtMax", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowAmenity
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthAmenity
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthAmenity
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.CreatedAtMax = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 7:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field SearchField", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowAmenity
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthAmenity
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthAmenity
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.SearchField = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 8:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field SearchValue", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowAmenity
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthAmenity
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthAmenity
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.SearchValue = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipAmenity(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthAmenity
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *ListAmenityResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowAmenity
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ListAmenityResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ListAmenityResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Items", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowAmenity
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthAmenity
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthAmenity
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Items = append(m.Items, &Amenity{})
			if err := m.Items[len(m.Items)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field MaxPage", wireType)
			}
			m.MaxPage = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowAmenity
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.MaxPage |= uint32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field TotalCount", wireType)
			}
			m.TotalCount = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowAmenity
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.TotalCount |= uint32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Page", wireType)
			}
			m.Page = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowAmenity
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Page |= uint32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 5:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Limit", wireType)
			}
			m.Limit = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowAmenity
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Limit |= uint32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field SearchField", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowAmenity
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthAmenity
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthAmenity
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.SearchField = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 7:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field SearchValue", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowAmenity
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthAmenity
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthAmenity
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.SearchValue = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipAmenity(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthAmenity
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipAmenity(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowAmenity
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowAmenity
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowAmenity
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthAmenity
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupAmenity
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthAmenity
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthAmenity        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowAmenity          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupAmenity = fmt.Errorf("proto: unexpected end of group")
)
